How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    We looked at the differences to see something weird or wrong.

How could having easy access to the entire history of a file make you a better
programmer in the long term?

    can always revert back to a previous version when something breaks

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
    
    Google limits to only 30 days and selects on intervals to commit, might be
	unimportant changes.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    can group files that go logically together or could otherwise break code.

How can you use the commands git log and git diff to view the history of files?
    
    git log to see all the commit and git diff to compare them as well as
running git log by itself and comparing cwd to repo.

How might using version control make you more confident to make changes that
could break something?
    
    with git we are completely free to make any changes without consequences
as long as we play by the rules.

Now that you have your workspace set up, what do you want to try using Git for?

    every user story in Scrum can be a new branch and only reserve master for
final design.
